[{"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\index.js":"1","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\App.js":"2","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\Router.js":"3","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\user\\Signin.js":"4","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\user\\Signup.js":"5","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\Routes.js":"6","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Home.js":"7","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Menu.js":"8","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Layout.js":"9","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\config.js":"10","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\auth\\index.js":"11","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\user\\userdashboard.js":"12","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\auth\\Proute.js":"13","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\user\\admindashboard.js":"14","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\auth\\adminroute.js":"15","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\admin\\addcategory.js":"16","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\admin\\apiadmin.js":"17","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\admin\\addproducts.js":"18","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\apiCore.js":"19","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Card.js":"20","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Showimage.js":"21","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Shop.js":"22","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Checkbox.js":"23","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\fixedPrices.js":"24","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\radioBox.js":"25","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\search.js":"26","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\cartHelpers.js":"27","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Product.js":"28","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Cart.js":"29","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Checkout.js":"30","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\admin\\orders.js":"31","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\user\\Profile.js":"32","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\user\\apiUser.js":"33","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\admin\\ManageProducts.js":"34","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\admin\\UpdateProduct.js":"35"},{"size":155,"mtime":1557417282000,"results":"36","hashOfConfig":"37"},{"size":96,"mtime":1557416344000,"results":"38","hashOfConfig":"37"},{"size":451,"mtime":1610915546483,"results":"39","hashOfConfig":"37"},{"size":2958,"mtime":1611922834160,"results":"40","hashOfConfig":"37"},{"size":1955,"mtime":1611312331873,"results":"41","hashOfConfig":"37"},{"size":2020,"mtime":1623219880486,"results":"42","hashOfConfig":"37"},{"size":1570,"mtime":1614425268231,"results":"43","hashOfConfig":"37"},{"size":2062,"mtime":1614523764486,"results":"44","hashOfConfig":"37"},{"size":324,"mtime":1612262943232,"results":"45","hashOfConfig":"37"},{"size":47,"mtime":1611084219110,"results":"46","hashOfConfig":"37"},{"size":1508,"mtime":1611730900832,"results":"47","hashOfConfig":"37"},{"size":1854,"mtime":1623047187736,"results":"48","hashOfConfig":"37"},{"size":355,"mtime":1611729620616,"results":"49","hashOfConfig":"37"},{"size":1496,"mtime":1623127576551,"results":"50","hashOfConfig":"37"},{"size":387,"mtime":1611904039307,"results":"51","hashOfConfig":"37"},{"size":1820,"mtime":1612022453245,"results":"52","hashOfConfig":"37"},{"size":3739,"mtime":1623128245494,"results":"53","hashOfConfig":"37"},{"size":4253,"mtime":1612208166672,"results":"54","hashOfConfig":"37"},{"size":3435,"mtime":1620071207531,"results":"55","hashOfConfig":"37"},{"size":4479,"mtime":1623390552734,"results":"56","hashOfConfig":"37"},{"size":324,"mtime":1612261266680,"results":"57","hashOfConfig":"37"},{"size":2428,"mtime":1620110801651,"results":"58","hashOfConfig":"37"},{"size":989,"mtime":1613128550693,"results":"59","hashOfConfig":"37"},{"size":314,"mtime":1613216290688,"results":"60","hashOfConfig":"37"},{"size":536,"mtime":1613388437033,"results":"61","hashOfConfig":"37"},{"size":3356,"mtime":1614395184012,"results":"62","hashOfConfig":"37"},{"size":2521,"mtime":1619798997407,"results":"63","hashOfConfig":"37"},{"size":2014,"mtime":1614426532572,"results":"64","hashOfConfig":"37"},{"size":1839,"mtime":1623390029700,"results":"65","hashOfConfig":"37"},{"size":4087,"mtime":1623389436238,"results":"66","hashOfConfig":"37"},{"size":4335,"mtime":1622784761297,"results":"67","hashOfConfig":"37"},{"size":2943,"mtime":1622805889153,"results":"68","hashOfConfig":"37"},{"size":1616,"mtime":1623048979709,"results":"69","hashOfConfig":"37"},{"size":2456,"mtime":1623219823140,"results":"70","hashOfConfig":"37"},{"size":6587,"mtime":1623219783060,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1liio17",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"74"},"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\index.js",[],["162","163"],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\App.js",[],["164","165"],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\Router.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\user\\Signin.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\user\\Signup.js",["166","167","168"],"import React,{useState} from \"react\";\nimport {Link} from 'react-router-dom';\nimport Layout from '../core/Layout'\nimport {API} from \"../config\";\nimport {signup} from \"../auth\";\n//var x=process.env.REACT_APP_API_URL\nconst Signup = () => {\n\tconst[values,setValues]=useState({\n\t\tname:'',\n\t\temail:'',\n\t\tpassword:'',\n\t\terror:'',\n\t\tsuccess: false,\n\t\t\n\t})\n\tconst{name,email,password,success,error}=values;\n\tconst handlechange=name=>event=>{\n\nsetValues({...values,error:false,[name]:event.target.value})\n\t}\n\n\nconst clickedsubmit=(event)=>{\n\tevent.preventDefault();\n\tsignup({name,email,password}).then(\ndata=>{if(data.error){setValues({...values,error:data.error,success:false})\n}else{\n\tsetValues({...values,\n\t\tname:'',\n\t\temail:'',\n\t\tpassword:'',\n\t\terror:'',\n\t\tsuccess:true})\n}\n\n}\n\t\t)\n}\n\t\n\nconst signupform=()=>(<form><div className=\"form-group\">\n<label className=\"text-muted\">Name</label>\n<input onChange={handlechange(\"name\")} type=\"text\" className=\"form-control\" value={name}/></div>\n\n<div className=\"form-group\">\n<label className=\"text-muted\">Email</label>\n<input onChange={handlechange('email')} type=\"email\" className=\"form-control\" value={email}/></div>\n\n\n<div className=\"form-group\">\n<label className=\"text-muted\">Password</label>\n<input onChange={handlechange('password')} type=\"password\" className=\"form-control\" value={password}/>\n\n\n\n</div>\n<button onClick={clickedsubmit} className=\"btn btn-primary\">Submit</button>\n</form>\n\t);\n\nconst showError=()=>(\n\t<div className=\"alert alert-danger\" style={{display:success?'':'none'}}>\n\n\tconsole.log())</div>\n\n);\n\nconst showSuccess=()=>(\n\t<div className=\"alert alert-info\" style={{display:success?'':'none'}}>\n\tnew account is created .please signin <Link to=\"/signin\">signin</Link>\n\n\t</div>\n\t\n);\nreturn(<Layout\n title=\"Signup\" \n description=\"Node React E-commerce App\"\n className=\"container col-md-8 offset-md-2\">\n {showSuccess()}\n\n\t{signupform()}\n\t{JSON.stringify(values)}\n\t</Layout>);\n\t}\n\nexport default Signup;\n","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\Routes.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Home.js",["169"],"import React,{useState,useEffect} from \"react\";\nimport Layout from './Layout';\nimport{getProducts}from\"./apiCore\"\nimport Card from \"./Card\"\nimport Search from\"./search\"\n\n\nconst Home = () =>{\n\n\nconst[productsBySell,setProductsBySell]=useState([]);\nconst[productsByArrival,setProductsByArrival]=useState([]);\nconst[error,setError]=useState(false);\n\nconst loadProductsBySell=()=>{\n\t\ngetProducts('sold').then(data=>{\nif(data.error){\n\tsetError(data.error)\n}else{\n\n\tsetProductsBySell(data)\n}\n\n})\n}\n\n\n\n\nconst loadProductsByArrival=()=>{\ngetProducts('createdAt').then(data=>{\nif(data.error){\n\tsetError(data.error)\n}else{\n\n\tsetProductsByArrival(data)\n}\n})\n}\n\n\nuseEffect(()=>{\n\tloadProductsByArrival()\n\tloadProductsBySell()\n},[])\n\nreturn (\n\t<Layout title=\"Home Page\" description=\"Node React E-commerce App\" className=\"container-fluid\">\n\t<h2 className=\"mb-4\">Best Sellers</h2>\n<div className=\"row\">\n<Search/>\n\t</div>\n<h2 className=\"mb-4\">New Arrivals</h2>\n            <div className=\"row\">\n                {productsByArrival.map((product, i) => (\n                    <div key={i} className=\"col-4 mb-3\">\n                        <Card product={product} />\n                    </div>\n                ))}\n            </div>\n\n            <h2 className=\"mb-4\">Best Sellers</h2>\n            <div className=\"row\">\n                {productsBySell.map((product, i) => (\n                    <div key={i} className=\"col-4 mb-3\">\n                        <Card product={product} />\n                    </div>\n                ))}\n            </div>\n\t.....\n\n\t</Layout>\n)\n\n\n}\nexport default Home;\n","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Menu.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Layout.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\config.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\auth\\index.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\user\\userdashboard.js",["170"],"import React,{useState,useEffect} from \"react\";\r\nimport Layout from '../core/Layout'\r\nimport {isauth} from '../auth'\r\nimport{Link} from \"react-router-dom\"\r\nimport {getPurchaseHistory} from \"./apiUser\"\r\n\r\nconst Dashboard = () => {\r\n\r\nconst [history,setHistory]=useState([])\r\n\r\n\r\nconst{user:{_id,name,email,role}}=isauth()\r\nconst token =isauth().token;\r\n\r\nconst init=(userId,token)=>{\r\ngetPurchaseHistory(userId,token).then(data=>{\r\n\tif(data.error){\r\nconsole.log(data.error)\r\n\t}else{\r\n\t\tsetHistory(data)\r\n\t}\r\n})\r\n}\r\n\r\nuseEffect(()=>{\r\n\tinit(_id,token)\r\n},[])\r\n\r\nconst ulinks =()=>{\r\n\r\n\r\n\treturn(\r\n<div className=\"card\">    \r\n<h4 className=\"card-header\">User Links </h4>\r\n\r\n<li className=\"list-group-item\"><Link className=\"nav-link\" to=\"/cart\">My Cart</Link>\r\n\t</li>\r\n\t<li className=\"list-group-item\"><Link className=\"nav-link\" to={`/profile/${_id}`} >User profile</Link>\r\n\t</li>\r\n\r\n\r\n</div>\r\n\t\t)\r\n}\r\n\r\nconst userinfo=()=>{\r\n\r\nreturn(\r\n<div className=\"card mb-5\">\r\n\t<h3 className=\"card-header\">User Information</h3>\r\n\t<ul className=\"list-group\">\r\n\t<li className=\"list-group-item\">{name}\r\n\t</li>\r\n\t<li className=\"list-group-item\">{email}\r\n\t</li>\r\n\t<li className=\"list-group-item\">{role===1 ? 'Admin':'Registered User'}\r\n\t</li>\r\n\t</ul>\r\n\t</div>\r\n\r\n\r\n\t);\r\n\r\n\r\n\r\n}\r\n\r\n\r\nconst Phistory =(history)=>{\r\n\r\n\r\n\treturn(\r\n\r\n<div className=\"card mb-5\">\r\n\t<h3 className=\"card-header\">Purchase history</h3>\r\n\t<ul className=\"list-group\">\r\n\t<li className=\"list-group-item\">history</li>\r\n\t<li>{JSON.stringify(history)}</li>\r\n\t</ul></div>\r\n\r\n\r\n\t\t);\r\n}\r\n\r\n\r\n\r\n\treturn(<Layout title=\"Dashboard\" description={`good day${name}`} className=\"container-fluid\">\r\n\r\n\t\t\r\n\t<div className=\"row\">\r\n\t\t<div className=\"col-3\">\r\n\t\t{ulinks()}\r\n\t\t{Phistory(history)}\r\n\r\n\t\t</div>\r\n\t\t<div className=\"col-9\">\r\n\t\t{userinfo()}\r\n\t\t</div>\r\n\t\t</div>\r\n\t\r\n\t...\r\n\t</Layout>\r\n)}\r\nexport default Dashboard;\r\n","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\auth\\Proute.js",["171"],"import React ,{Component} from 'react'\r\nimport{Route,Redirect} from 'react-router-dom'\r\nimport {isauth} from \"./index\"\r\n\r\nconst Proute=({component:Component,...rest})=>(\r\n<Route {...rest} render={props=>isauth() ?(\r\n<Component{...props}/>\r\n\t):(\r\n\r\n<Redirect to={{pathname:\"/signin\",state:{from: props.location}}}/>\r\n\r\n\t)\r\n}\r\n/>\r\n);\r\nexport default Proute;","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\user\\admindashboard.js",["172"],"import React from \"react\";\r\nimport Layout from '../core/Layout'\r\nimport {isauth} from '../auth'\r\nimport{Link} from \"react-router-dom\"\r\n\r\nconst adminDashboard = () => {\r\n\r\nconst{user:{_id,name,email,role}}=isauth()\r\n\r\nconst adminlinks =()=>{\r\n\r\n\r\n\treturn(\r\n<div className=\"card\">    \r\n<h4 className=\"card-header\">Admin Links </h4>\r\n\r\n<li className=\"list-group-item\"><Link className=\"nav-link\" to=\"/Create/Category\">\r\nCreate Category\r\n</Link>\r\n\t</li>\r\n\t<li className=\"list-group-item\"><Link className=\"nav-link\" to=\"/create/product\" >\r\nCreate product\r\n\t</Link>\r\n\t</li>\r\n\t<li className=\"list-group-item\"><Link className=\"nav-link\" to=\"/admin/orders\" >\r\nview orders\r\n\t</Link>\r\n\t</li>\r\n\t<li className=\"list-group-item\"><Link className=\"nav-link\" to=\"/admin/products\" >\r\nManage products\r\n\t</Link>\r\n\t</li>\r\n</div>\r\n\t\t)\r\n}\r\n\r\nconst Admininfo=()=>{\r\n\r\nreturn(\r\n<div className=\"card mb-5\">\r\n\t<h3 className=\"card-header\">User Information</h3>\r\n\t<ul className=\"list-group\">\r\n\t<li className=\"list-group-item\">{name}\r\n\t</li>\r\n\t<li className=\"list-group-item\">{email}\r\n\t</li>\r\n\t<li className=\"list-group-item\">{role===1 ? 'Admin':'Registered User'}\r\n\t</li>\r\n\t</ul>\r\n\t</div>\r\n\r\n\r\n\t);\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\treturn(<Layout title=\"Dashboard\" description={`good day${name}`} className=\"container-fluid\">\r\n\r\n\t\t\r\n\t<div className=\"row\">\r\n\t\t<div className=\"col-3\">\r\n\t\t{adminlinks()}\r\n\t\t\r\n\r\n\t\t</div>\r\n\t\t<div className=\"col-9\">\r\n\t\t{Admininfo()}\r\n\t\t</div>\r\n\t\t</div>\r\n\t\r\n\t...\r\n\t</Layout>\r\n)}\r\nexport default adminDashboard;\r\n","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\auth\\adminroute.js",["173"],"import React ,{Component} from 'react'\r\nimport{Route,Redirect} from 'react-router-dom'\r\nimport {isauth} from \"./index\"\r\n\r\nconst Adminroute=({component:Component,...rest})=>(\r\n<Route {...rest} render={props=>isauth()&&isauth().user.role===1 ?(\r\n<Component{...props}/>\r\n\t):(\r\n\r\n<Redirect to={{pathname:\"/signin\",state:{from: props.location}}}/>\r\n\r\n\t)\r\n}\r\n/>\r\n);\r\nexport default Adminroute;","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\admin\\addcategory.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\admin\\apiadmin.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\admin\\addproducts.js",["174","175","176","177","178","179"],"import React,{useState,useEffect} from \"react\";\r\nimport Layout from '../core/Layout';\r\nimport {isauth} from '../auth';\r\nimport{Link} from \"react-router-dom\";\r\nimport {createProduct,getCategories} from \"./apiadmin\";\r\n\r\n\r\nconst AddProduct=()=>{\r\n\r\nconst{user,token }=isauth();\r\nconst [values,setValues]=useState({\r\n\tname:'',\r\n\tdescription:'',\r\n\tprice:'',\r\n\tcategories:[],\r\n\tcategory:'',\r\n\tshipping:'',\r\n\tquantity:'',\r\n\tphoto:'',\r\n\tloading:false,\r\n\terror:'',\r\n\tcreatedProduct:'',\r\n\tredirectToProfile: false,\r\n\tformData: ''\r\n\r\n})\r\nconst {\r\nname,\r\n\tdescription,\r\n\tprice,\r\n\tcategories,\r\n\tcategory,\r\n\tshipping,\r\n\tquantity,\r\n\tloading,\r\n\terror,\r\n\tcreatedProduct,\r\n\tredirectToProfile,\r\n\tformData\r\n\r\n\r\n}=values;\r\n//load Categories and set form data\r\nconst init=()=>{\r\n\tgetCategories().then(data=>{\r\n\t\tif(data.error){\r\n\t\t\tsetValues({...values,error: data.error})\r\n\t\t}else{\r\n\t\t\tsetValues({...values,categories:data,formData: new FormData()});\r\n\t\t}\r\n\t})\r\n}\r\nuseEffect(()=>{init();},[]);\r\nuseEffect(()=>{\r\nsetValues({...values,formData: new FormData()})\r\n\r\n},[])\r\n\r\nconst handleChange=name=>event=>{\r\n\tconst value=name==='photo' ? event.target.files[0]:event.target.value\r\n\tformData.set(name,value)\r\n\tsetValues({...values,[name]:value})\r\n}\r\nconst clickSubmit=event=>{\r\n\tevent.preventDefault()\r\n\tsetValues({...values,error:\"\",loading:true})\r\n\tcreateProduct(user._id,token,formData).then(data=>{if(data.error){\r\n\t\tsetValues({...values,error:\"something went wrong plz check if all fields are filled\"})\r\n\t}else{\r\n\r\nsetValues({...values,name:'', description:'',photo:'',price:'',quantity:'',\r\nloading:false,createdProduct:data.name});\r\n\r\n\t}\r\n\r\n})\r\n\r\n\r\n};\r\n\r\nconst newPostForm=()=>(\r\n<form className=\"mb-3\" onSubmit={clickSubmit}>\r\n<div className=\"form-group\">\r\n<h4> post Photo</h4>\r\n<label className=\"btn btn-secondary\"><input\r\nonChange={handleChange('photo')}\r\n type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n</label>\r\n</div>\r\n<div className=\"form-group\">\r\n<label className=\"text-muted\">Name</label>\r\n<input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name}/>\r\n\r\n</div>\r\n\r\n<div className=\"form-group\">\r\n<label className=\"text-muted\">Description</label>\r\n<textArea onChange={handleChange('description')} className=\"form-control\" value={description}></textArea>\r\n\r\n</div>\r\n\r\n<div className=\"form-group\">\r\n<label className=\"text-muted\">Price</label>\r\n<input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price}/>\r\n\r\n</div>\r\n<div className=\"form-group\">\r\n<label className=\"text-muted\">category</label>\r\n<select onChange={handleChange('category')}  className=\"form-control\" >\r\n<option>Please select</option>\r\n{categories\r\n && categories.map((c,i)=>(\r\n <option key={i} value={c._id}>\r\n {c.name}</option>))}\r\n</select>\r\n\r\n</div>\r\n\r\n<div className=\"form-group\">\r\n<label className=\"text-muted\">Shipping</label>\r\n<select onChange={handleChange('shipping')}  className=\"form-control\" >\r\n<option>Please select</option>\r\n<option value=\"0\">No</option>\r\n<option value=\"1\">Yes</option>\r\n</select>\r\n\r\n</div>\r\n\r\n<div className=\"form-group\">\r\n<label className=\"text-muted\">Quantity</label>\r\n<input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity}/>\r\n\r\n</div>\r\n<button className=\"btn btn-outline-primary\"> Create product</button>\r\n</form>\r\n\r\n\t)\r\n\r\n const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\nconst showSuccess = () => (\r\n        <div\r\n            className=\"alert alert-info\"\r\n            style={{ display: createdProduct ? \"\" : \"none\" }}\r\n        >\r\n            <h2>{`${createdProduct}`}is created!</h2>\r\n        </div>\r\n    );\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n\r\n            </div>\r\n\r\n        );\r\n\t\r\nreturn(<Layout title=\"Add  new product\" description={`good day ,ready to add new Products?`} >\r\n\r\n\t\t\r\n\t<div className=\"row\">\r\n\t\t\r\n\t\t<div className=\"col-md-8 offset-md-2\">\r\n\t{newPostForm()}\r\n\t{showLoading()}\r\n\t{showSuccess()}\r\n\t{showError()}\r\n\r\n\t\t</div>\r\n\t\t</div>\r\n\t\r\n\r\n\t</Layout>)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default AddProduct;","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\apiCore.js",["180","181"],"import { API } from \"../config\";\r\nimport queryString from \"query-string\";\r\nimport { body } from \"express-validator\";\r\nimport { json } from \"body-parser\";\r\nexport const getProducts=(sortBy)=>{\r\n\r\nreturn fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`,{\r\nmethod:\"GET\"\r\n\r\n\r\n}).then(response=>{return response.json();})\r\n.catch(err=>console.log(err));\r\n\r\n\r\n\r\n};\r\n\r\nexport const getCategories=()=>{\r\nreturn fetch(`${API}/Categories`,{method:\"GET\"\r\n}).then(response=>{\r\n    return response.json();\r\n})\r\n.catch(err=>console.log(err));\r\n\r\n}\r\n\r\n\r\nexport const getFilteredProducts = (skip,limit,filters={}) => {\r\n   const data={limit,skip,filters}\r\n    return fetch(`${API}/products/by/search`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            \r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\nexport const list = params => {\r\n    const query = queryString.stringify(params);\r\n    console.log(\"query\", query);\r\n    return fetch(`${API}/products/search?${query}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const read = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport const listRelated = productId => {\r\n    return fetch(`${API}/products/related/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport const getBraintreeClientToken = (userId, token) => {\r\n    return fetch(`${API}/braintree/gettoken/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const processPayment = (userId, token,paymentData) => {\r\n    return fetch(`${API}/braintree/payment/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body:JSON.stringify(paymentData)\r\n    })\r\n        .then(response => {\r\n            console.log(\"payment data \\n\"+JSON.stringify(paymentData),\"response\"+JSON.stringify(response))\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport const createOrder = (userId, token,createOrderData) => {\r\n    return fetch(`${API}/order/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body:JSON.stringify({order:createOrderData})\r\n    })\r\n        .then(response => {\r\n           \r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Card.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Showimage.js",["182","183"],"import { API } from \"../config\";\r\nimport React,{useState,useEffect} from \"react\";\r\n\r\nconst ShowImage=({item,url})=>(\r\n<div className=\"product-img\">\r\n<img src={`${API}/${url}/photo/${item._id}`} alt={item.name} className=\"mb-3\"\r\nstyle={{maxHeight:\"100%\",maxWidth:\"100%\"}} />\r\n</div>\r\n\r\n\r\n\r\n\r\n\t);\r\n\r\n\texport default ShowImage;","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Shop.js",["184","185","186","187","188"],"import React,{useState,useEffect} from \"react\";\r\nimport Layout from './Layout';\r\nimport{getProducts}from\"./apiCore\"\r\nimport Card from \"./Card\"\r\nimport {getCategories,getFilteredProducts} from \"./apiCore\"\r\nimport Checkbox from \"./Checkbox\"\r\nimport{prices} from \"./fixedPrices\"\r\nimport RadioBox from \"./radioBox\"\r\n\r\n\r\nconst Shop=()=>{\r\n\tconst[myFilters,setMyFilters]=useState({\r\n\t\tfilters:{category:[],price:[]}\r\n\t});\r\nconst [categories,setCategories]=useState([])\r\nconst [error,setError]=useState(false)\r\nconst [limit,setLimit]=useState(6);\r\nconst [skip,setSkip]=useState(0);\r\nconst [filteredResults,setfilteredResults]=useState([]);\r\n\r\n\tconst init=()=>{\r\n\tgetCategories().then(data=>{\r\n\t\tif(data.error){\r\n\t\t\tsetError(data.error)\r\n\t\t}else{\r\n\t\t\tsetCategories(data)\r\n\t\t}\r\n\t})\r\n}\r\nuseEffect(()=>{init();\r\n\r\nloadFilterResults(skip,limit,myFilters.filters)\r\n\r\n},[]);\r\n\r\n\r\nconst loadFilterResults=(newFilters)=>{\r\n\t//console.log(newFilters);\r\n\tgetFilteredProducts(skip,limit,newFilters).then(data=>{\r\n\t\tif(data.error){\r\n\t\t\tsetError(data.error)\r\n\t\t}else{\r\n\t\t\tsetfilteredResults(data.data)\r\n\t\t}\r\n\t})\r\n\t\r\n};\r\n\r\nconst handleFilters =(filters,filterBy)=>{\r\n\tconst newFilters={...myFilters}\r\n\tnewFilters.filters[filterBy]=filters\r\n\r\n        if (filterBy === \"price\") {\r\n            let priceValues = handlePrice(filters);\r\n            newFilters.filters[filterBy] = priceValues;\r\n        }\r\n    loadFilterResults(myFilters.filters)\r\n\tsetMyFilters(newFilters);\r\n\r\n};\r\nconst handlePrice=value=>{\r\n\tconst data=prices\r\n\tlet array1=[]\r\n\t for (let key in data) {\r\n            if (data[key]._id === parseInt(value)) {\r\n                array1 = data[key].array;\r\n\r\n            }\r\n             console.log();\r\n        }\r\n        return array1;\r\n\r\n}\r\n\r\n\r\n\r\nreturn (\r\n\t<Layout title=\"Home Page\" description=\"Node React E-commerce App\" className=\"container-fluid\">\r\n\r\n<div className=\"row\">\r\n<div className=\"col-4\">\r\n<h4>Filter by categories</h4>\r\n<ul>\r\n<Checkbox categories={categories} \r\nhandleFilters={filters=>handleFilters(filters,'category')}/>\r\n</ul>\r\n<h4>Filter by Price Range</h4>\r\n<ul>\r\n<RadioBox prices={prices} \r\nhandleFilters={filters=>handleFilters(filters,'price')}/>\r\n</ul>\r\n</div>\r\n\r\n<div className=\"col-8\">\r\n\r\nright sidebar\r\n<div className=\"row\">{filteredResults.map((product,i)=>(\r\n<div  key={i} className=\"col-6 mb-4\">\r\n<Card  product={product}/>\r\n\r\n</div>\r\n\r\n\t))}</div>\r\n</div>\r\n\r\n\r\n</div>\r\n\t</Layout>\r\n)\r\n\r\n}\r\n\r\nexport default Shop;","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Checkbox.js",["189","190","191"],"import React,{useState,useEffect} from \"react\";\r\nimport Layout from './Layout';\r\nimport{getProducts}from\"./apiCore\"\r\n\r\nconst Checkbox =({categories,handleFilters})=>{\r\n\tconst [checked,setchecked]=useState([])\r\nconst handleToggle=c=>()=>{\r\n\t//return the first index or -1\r\nconst currentCategoryId=checked.indexOf(c)\r\nconsole.log(checked)\r\nconst newCheckedCategoryId=[...checked]\r\n// if currently checked was not already in checked state >push\r\n//else pull/takeoff\r\nif(currentCategoryId===-1){\r\n\tnewCheckedCategoryId.push(c)\r\n}else{newCheckedCategoryId.splice(currentCategoryId,1)\r\n}\r\n//console.log(newCheckedCategoryId)\r\nsetchecked(newCheckedCategoryId)\r\nhandleFilters(newCheckedCategoryId)\r\n}\r\nreturn categories.map((c,i)=>(\r\n\t<li key={i} className=\"list-unstyled\">\r\n\t<input onChange={handleToggle(c._id)} vlaue={checked.indexOf(c._id===-1)} type=\"checkbox\" className=\"form-check-input\"/>\r\n\t<label className=\"form-check-label\">{c.name}</label>\r\n\t</li>\r\n\t))\r\n\r\n}\r\n\r\nexport default Checkbox;","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\fixedPrices.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\radioBox.js",["192","193","194"],"import React,{useState,useEffect,Fragment} from \"react\";\r\n\r\n\r\n\r\n\r\nconst RadioBox=({prices,handleFilters})=>{\r\n\tconst[value,setValue]=useState(0)\r\nconst handleChange=()=>event=>{\r\nhandleFilters(event.target.value)\r\nconsole.log(event.target.value)\r\nsetValue(event.target.value)\r\n\r\n};\r\n\r\n\treturn prices.map((p,i)=>(\r\n\t<div key={i} >\r\n\t<input onChange={handleChange()} \r\n\tname={p}\r\n\tvalue={`${p._id}`} type=\"radio\" className=\"mr-2 ml-4\" />\r\n\t\r\n\t<label className=\"form-check-label\">{p.name}</label>\r\n\t</div>\r\n\t))\r\n}\r\nexport default RadioBox;","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\search.js",["195","196"],"import React,{useState,useEffect} from \"react\";\r\n\r\nimport{getProducts,getCategories,list}from\"./apiCore\"\r\nimport Card from \"./Card\"\r\n\r\nconst Search = () => {\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        category: \"\",\r\n        search: \"\",\r\n        results: [],\r\n        searched: false\r\n    });\r\n\r\n    const { categories, category, search, results, searched } = data;\r\nconst searchedProducts=(results=[])=>{\r\n    return (\r\n<div className=\"row\">\r\n\r\n{results.map((product,i)=>(\r\n\r\n\t\r\n<Card key={i} product={product}/>\r\n\r\n    ))}\r\n\r\n</div>\r\n        )\r\n\r\n\r\n\r\n}\r\n    const loadCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setData({ ...data, categories: data });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const searchData = () => {\r\n        // console.log(search, category);\r\n         if (search) {\r\n            list({ search: search || undefined, category: category }).then(\r\n                response => {\r\n                    if (response.error) {\r\n                        console.log(response.error);\r\n                    } else {\r\n                        setData({ ...data, results: response, searched: true });\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    const searchSubmit = e => {\r\n        e.preventDefault();\r\n        searchData();\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        setData({ ...data, [name]: event.target.value, searched: false });\r\n    };\r\n\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select\r\n                            className=\"btn mr-2\"\r\n                            onChange={handleChange(\"category\")}\r\n                        >\r\n                            <option value=\"All\">Pick Category</option>\r\n                            {categories.map((c, i) => (\r\n                                <option key={i} value={c._id}>\r\n                                    {c.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"search\")}\r\n                        placeholder=\"Search by name\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"btn input-group-append\"\r\n                    style={{ border: \"none\" }}\r\n                >\r\n                    <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">\r\n                {searchForm()}\r\n                \r\n            </div>\r\n             <div className=\"container-fluid mb-3\">\r\n\r\n                {searchedProducts(results)}\r\n               \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\cartHelpers.js",["197"],"export const addItem = (item, next) => {\n    let cart = [];\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\n        }\n        cart.push({\n            ...item,\n            count: 1\n        });\n\n        // remove duplicates\n        // build an Array from new Set and turn it back into array using Array.from\n        // so that later we can re-map it\n        // new set will only allow unique values in it\n        // so pass the ids of each object/product\n        // If the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual product from the cart\n\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\n        next();\n    }\n};\n\nexport const itemTotal = () => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            return JSON.parse(localStorage.getItem(\"cart\")).length;\n        }\n    }\n    return 0;\n};\n\nexport const getCart = () => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            return JSON.parse(localStorage.getItem(\"cart\"));\n        }\n    }\n    return [];\n};\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart[i].count = count;\n            }\n            return localStorage.setItem(\"cart\", JSON.stringify(cart));\n        });\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\n        \n    }\n};\n\nexport const removeItem = productId => {\n    let cart = [];\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart.splice(i, 1);\n            }\n        });\n\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n    return cart;\n};\n\nexport const emptycart=next=>{\n    if(typeof window!==\"undefined\"){\n        localStorage.removeItem(\"cart\");\n    }\n    next();\n}","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Product.js",["198"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport { read, listRelated } from \"./apiCore\";\nimport Card from \"./Card\";\n\nconst Product = props => {\n    const [product, setProduct] = useState({});\n    const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            console.log(data);\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProduct(data);\n                // fetch related products\n                listRelated(data._id).then(data => {\n                    if (data.error) {\n                        setError(data.error);\n                    } else {\n                        setRelatedProduct(data);\n                    }\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        const productId = props.match.params.productId;\n        console.log(productId);\n        loadSingleProduct(productId);\n    }, [props]);\n\n    return (\n        <Layout\n            title={product && product.name}\n            description={\n                product &&\n                product.description &&\n                product.description.substring(0, 100)\n            }\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    {product && product.description && (\n                        <Card product={product} showViewProductButton={false} />\n                    )}\n                </div>\n\n                <div className=\"col-4\">\n                    <h4>Related products</h4>\n                    {relatedProduct.map((p, i) => (\n                        <div className=\"mb-3\">\n                            <Card key={i} product={p} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Product;\n","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Cart.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\core\\Checkout.js",["199","200","201","202","203"],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\admin\\orders.js",["204","205"],"import React,{useState,useEffect} from \"react\";\r\nimport Layout from '../core/Layout';\r\nimport {isauth} from '../auth';\r\nimport{Link} from \"react-router-dom\";\r\nimport {listOrders,getStatusValues,updateStatusValues} from \"./apiadmin\";\r\nimport moment from 'moment';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Orders() {\r\n  const [Orders,setOrders]=useState([])\r\n  const [statusValues,setStatusValues]=useState([])\r\n  const{user,token}=isauth()\r\n  const loadOrders=()=>{\r\nlistOrders(user._id,token).then(data=>{\r\n    if(data.error){\r\n        console.log(data.error)\r\n    }else{\r\n        //console.log(\"data\".data)\r\n        setOrders(data)\r\n        \r\n    }\r\n})\r\n\r\n\r\n  }\r\n  const handleStatusChange=(e,orderId)=>{\r\n      console.log(\"update status\")\r\n      updateStatusValues(user._id,token,orderId,e.target.value).then(data=>{\r\n          if(data.error){console.log(\"update status failed\")}\r\n          else{loadOrders()}\r\n    })\r\n  }\r\n  const showStatus=(o)=>(\r\n      <div className=\"form-group\">\r\n          <h3 className=\"mark mb-4\">Status:{o.status}</h3>\r\n          \r\n          <select className=\"form-control\" onChange={e=>handleStatusChange(e,o._id)}>\r\n<option>Update Status</option>\r\n\r\n{statusValues.map((status,index)=>(\r\n    <option key={index} value={status}>\r\n     \r\n        {status}\r\n    </option>\r\n))}\r\n\r\n          </select>\r\n      </div>\r\n  )\r\n\r\n\r\n  const loadStatusValues=()=>{\r\n    getStatusValues(user._id,token).then(data=>{\r\n        if(data.error){\r\n            console.log(data.error)\r\n        }else{\r\n            //console.log(data)\r\n            setStatusValues(data)\r\n            \r\n        }\r\n    })\r\n    \r\n    \r\n      }\r\n  useEffect(()=>{\r\n     \r\n      loadOrders()\r\n      loadStatusValues()\r\n  },[])\r\n\r\n  const showInput = (key, value) => (\r\n    <div className=\"input-group mb-2 mr-sm-2\">\r\n        <div className=\"input-group-prepend\">\r\n            <div className=\"input-group-text\">{key}</div>\r\n        </div>\r\n        <input\r\n            type=\"text\"\r\n            value={value}\r\n            className=\"form-control\"\r\n            readOnly\r\n        />\r\n    </div>\r\n);\r\n\r\n  const showOrdersLength=()=>{\r\n      if(Orders.length>0)\r\n      {return <h1 className=\"text-danger display-2\">Total orders:{Orders.length}</h1>}\r\n      else\r\n        {return <h1 className=\"text-danger \">No orders</h1>\r\n      }\r\n  }\r\n  return(<Layout title=\"Add a new Category\" description={`you can manage all orders here`} >\r\n\r\n\t\t\r\n\t<div className=\"row\">\r\n\t\t\r\n\t\t<div className=\"col-md-8 offset-md-2\">\r\n\t\t\r\n\t\t{showOrdersLength()}\r\n\t\t{Orders.map((o,oindex)=>{\r\n            return(\r\n                <div className=\"mt-5\" key={oindex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                    <h2 className='mb-5'>\r\n                        <span className=\"bg-primary\">{o._id}</span>\r\n                    </h2>\r\n                    <ul className=\"list-group mb-2\">\r\n                        <li className=\"list-group-item\">{showStatus(o)}</li>\r\n                        <li className=\"list-group-item\">Transection id:{o.transaction_id}</li>\r\n                        <li className=\"list-group-item\">Amount:{o.amount}</li>\r\n                        <li className=\"list-group-item\">Order by:{o.user.name}</li>\r\n                        <li className=\"list-group-item\">Ordered at:{moment(o.createdAt).fromNow()}</li>\r\n                        <li className=\"list-group-item\">Delivery_Address {o.address}</li>\r\n                    </ul>\r\n                    {\r\n                    o.products.map((p,pindex)=>(\r\n                            <div className=\"mb-4\" key={pindex}style={{padding:'20px', border:'1px solid indigo'}}>\r\n                                        <p>product details</p>\r\n                                        {showInput(\"Product name\", p.name)}\r\n                                        {showInput(\"Product price\", p.price)}\r\n                                        {showInput(\"Product total\", p.count)}\r\n                                        {showInput(\"Product Id\", p._id)}\r\n                            </div>\r\n                    ))}\r\n                    <h3 className='mt-4 mb-4 font-italic'>\r\n                        Total products in the order:{o.products.length}\r\n                        </h3> \r\n                      \r\n                     </div>\r\n            )\r\n        })}\r\n\t\r\n\t\t\r\n\r\n\t\t</div>\r\n\t\t</div>\r\n\t\r\n\r\n\t</Layout>)\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\user\\Profile.js",["206","207","208"],"import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isauth } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { read, update, updateUser } from './apiUser';\n\nconst Profile = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        error: false,\n        success: false\n    });\n\n    const { token } = isauth();\n    const { name, email, password, error, success } = values;\n\n    const init = userId => {\n        // console.log(userId);\n        read(userId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: true });\n            } else {\n                setValues({ ...values, name: data.name, email: data.email });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.userId);\n    }, []);\n\n    const handleChange = name => e => {\n        setValues({ ...values, error: false, [name]: e.target.value });\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        update(match.params.userId, token, { name, email, password }).then(data => {\n            if (data.error) {\n                // console.log(data.error);\n                alert(data.error);\n            } else {\n                updateUser(data, () => {\n                    setValues({\n                        ...values,\n                        name: data.name,\n                        email: data.email,\n                        success: true\n                    });\n                });\n            }\n        });\n    };\n\n    const redirectUser = success => {\n        if (success) {\n            return <Redirect to=\"/cart\" />;\n        }\n    };\n\n    const profileUpdate = (name, email, password) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} />\n            </div>\n\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <Layout title=\"Profile\" description=\"Update your profile\" className=\"container-fluid\">\n            <h2 className=\"mb-4\">Profile update</h2>\n            {profileUpdate(name, email, password)}\n            {redirectUser(success)}\n        </Layout>\n    );\n};\n\nexport default Profile;\n","C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\user\\apiUser.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\admin\\ManageProducts.js",[],"C:\\Users\\admin\\Documents\\learningnode\\javaapi\\front\\src\\admin\\UpdateProduct.js",["209","210","211","212"],"import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isauth } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { getProduct, getCategories, updateProduct } from './apiadmin';\n\nconst UpdateProduct = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: false,\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n    const [categories, setCategories] = useState([]);\n\n    const { user, token } = isauth();\n    const {\n        name,\n        description,\n        price,\n        // categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    const init = productId => {\n        getProduct(productId).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                // populate the state\n                setValues({\n                    ...values,\n                    name: data.name,\n                    description: data.description,\n                    price: data.price,\n                    category: data.category._id,\n                    shipping: data.shipping,\n                    quantity: data.quantity,\n                    formData: new FormData()\n                });\n                // load categories\n                initCategories();\n            }\n        });\n    };\n\n    // load categories and set form data\n    const initCategories = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.productId);\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    error: false,\n                    redirectToProfile: true,\n                    createdProduct: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Update Product</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is updated!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    const redirectUser = () => {\n        if (redirectToProfile) {\n            if (!error) {\n                return <Redirect to=\"/\" />;\n            }\n        }\n    };\n\n    return (\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                    {redirectUser()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default UpdateProduct;\n",{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"213","replacedBy":"217"},{"ruleId":"215","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":4,"column":9,"nodeType":"221","messageId":"222","endLine":4,"endColumn":12},{"ruleId":"219","severity":1,"message":"223","line":16,"column":36,"nodeType":"221","messageId":"222","endLine":16,"endColumn":41},{"ruleId":"219","severity":1,"message":"224","line":61,"column":7,"nodeType":"221","messageId":"222","endLine":61,"endColumn":16},{"ruleId":"219","severity":1,"message":"223","line":13,"column":7,"nodeType":"221","messageId":"222","endLine":13,"endColumn":12},{"ruleId":"225","severity":1,"message":"226","line":27,"column":3,"nodeType":"227","endLine":27,"endColumn":5,"suggestions":"228"},{"ruleId":"219","severity":1,"message":"229","line":1,"column":16,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"219","severity":1,"message":"230","line":8,"column":13,"nodeType":"221","messageId":"222","endLine":8,"endColumn":16},{"ruleId":"219","severity":1,"message":"229","line":1,"column":16,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"219","severity":1,"message":"231","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":12},{"ruleId":"219","severity":1,"message":"232","line":32,"column":2,"nodeType":"221","messageId":"222","endLine":32,"endColumn":10},{"ruleId":"219","severity":1,"message":"233","line":33,"column":2,"nodeType":"221","messageId":"222","endLine":33,"endColumn":10},{"ruleId":"219","severity":1,"message":"234","line":38,"column":2,"nodeType":"221","messageId":"222","endLine":38,"endColumn":19},{"ruleId":"225","severity":1,"message":"235","line":53,"column":25,"nodeType":"227","endLine":53,"endColumn":27,"suggestions":"236"},{"ruleId":"225","severity":1,"message":"237","line":57,"column":3,"nodeType":"227","endLine":57,"endColumn":5,"suggestions":"238"},{"ruleId":"219","severity":1,"message":"239","line":3,"column":10,"nodeType":"221","messageId":"222","endLine":3,"endColumn":14},{"ruleId":"219","severity":1,"message":"240","line":4,"column":10,"nodeType":"221","messageId":"222","endLine":4,"endColumn":14},{"ruleId":"219","severity":1,"message":"241","line":2,"column":15,"nodeType":"221","messageId":"222","endLine":2,"endColumn":23},{"ruleId":"219","severity":1,"message":"242","line":2,"column":24,"nodeType":"221","messageId":"222","endLine":2,"endColumn":33},{"ruleId":"219","severity":1,"message":"243","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":19},{"ruleId":"219","severity":1,"message":"223","line":16,"column":8,"nodeType":"221","messageId":"222","endLine":16,"endColumn":13},{"ruleId":"219","severity":1,"message":"244","line":17,"column":14,"nodeType":"221","messageId":"222","endLine":17,"endColumn":22},{"ruleId":"219","severity":1,"message":"245","line":18,"column":13,"nodeType":"221","messageId":"222","endLine":18,"endColumn":20},{"ruleId":"225","severity":1,"message":"246","line":34,"column":3,"nodeType":"227","endLine":34,"endColumn":5,"suggestions":"247"},{"ruleId":"219","severity":1,"message":"242","line":1,"column":24,"nodeType":"221","messageId":"222","endLine":1,"endColumn":33},{"ruleId":"219","severity":1,"message":"248","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":14},{"ruleId":"219","severity":1,"message":"243","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":19},{"ruleId":"219","severity":1,"message":"242","line":1,"column":24,"nodeType":"221","messageId":"222","endLine":1,"endColumn":33},{"ruleId":"219","severity":1,"message":"249","line":1,"column":34,"nodeType":"221","messageId":"222","endLine":1,"endColumn":42},{"ruleId":"219","severity":1,"message":"250","line":7,"column":8,"nodeType":"221","messageId":"222","endLine":7,"endColumn":13},{"ruleId":"219","severity":1,"message":"243","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":19},{"ruleId":"219","severity":1,"message":"251","line":15,"column":52,"nodeType":"221","messageId":"222","endLine":15,"endColumn":60},{"ruleId":"252","severity":1,"message":"253","line":73,"column":31,"nodeType":"254","messageId":"255","endLine":73,"endColumn":33},{"ruleId":"219","severity":1,"message":"223","line":9,"column":12,"nodeType":"221","messageId":"222","endLine":9,"endColumn":17},{"ruleId":"219","severity":1,"message":"248","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":14},{"ruleId":"219","severity":1,"message":"243","line":3,"column":10,"nodeType":"221","messageId":"222","endLine":3,"endColumn":21},{"ruleId":"219","severity":1,"message":"256","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":12},{"ruleId":"225","severity":1,"message":"257","line":39,"column":8,"nodeType":"227","endLine":39,"endColumn":10,"suggestions":"258"},{"ruleId":"219","severity":1,"message":"259","line":58,"column":13,"nodeType":"221","messageId":"222","endLine":58,"endColumn":21},{"ruleId":"219","severity":1,"message":"231","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":12},{"ruleId":"225","severity":1,"message":"260","line":72,"column":5,"nodeType":"227","endLine":72,"endColumn":7,"suggestions":"261"},{"ruleId":"219","severity":1,"message":"231","line":4,"column":10,"nodeType":"221","messageId":"222","endLine":4,"endColumn":14},{"ruleId":"219","severity":1,"message":"223","line":17,"column":36,"nodeType":"221","messageId":"222","endLine":17,"endColumn":41},{"ruleId":"225","severity":1,"message":"262","line":32,"column":8,"nodeType":"227","endLine":32,"endColumn":10,"suggestions":"263"},{"ruleId":"219","severity":1,"message":"231","line":4,"column":10,"nodeType":"221","messageId":"222","endLine":4,"endColumn":14},{"ruleId":"219","severity":1,"message":"232","line":31,"column":9,"nodeType":"221","messageId":"222","endLine":31,"endColumn":17},{"ruleId":"219","severity":1,"message":"233","line":32,"column":9,"nodeType":"221","messageId":"222","endLine":32,"endColumn":17},{"ruleId":"225","severity":1,"message":"264","line":76,"column":8,"nodeType":"227","endLine":76,"endColumn":10,"suggestions":"265"},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],["266"],["267"],"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'showError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["268"],"'Component' is defined but never used.","'_id' is assigned a value but never used.","'Link' is defined but never used.","'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["269"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["270"],"'body' is defined but never used.","'json' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'getProducts' is defined but never used.","'setLimit' is assigned a value but never used.","'setSkip' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilterResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["271"],"'Layout' is defined but never used.","'Fragment' is defined but never used.","'value' is assigned a value but never used.","'searched' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["272"],"'getnonce' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["273"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["274"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["275"],"no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [_id, token]",{"range":"292","text":"293"},"Update the dependencies array to be: [init]",{"range":"294","text":"295"},"Update the dependencies array to be: [values]",{"range":"296","text":"297"},"Update the dependencies array to be: [limit, loadFilterResults, myFilters.filters, skip]",{"range":"298","text":"299"},"Update the dependencies array to be: [token, userId]",{"range":"300","text":"301"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"302","text":"303"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"304","text":"305"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"306","text":"307"},[553,555],"[_id, token]",[968,970],"[init]",[1044,1046],"[values]",[856,858],"[limit, loadFilterResults, myFilters.filters, skip]",[982,984],"[token, userId]",[1704,1706],"[loadOrders, loadStatusValues]",[899,901],"[init, match.params.userId]",[2070,2072],"[init, match.params.productId]"]